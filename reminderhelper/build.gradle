apply plugin: 'com.android.library'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = 1.7
        targetCompatibility = 1.8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    api project(':tools')


    //    implementation 'com.android.support:appcompat-v7:28.0.0'

    //#    Android DB support Room

    //    ## da mantenere la ver 2.1.0-alpha04
    def room_version = "2.1.0-alpha04"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // use kapt for Kotlin

    //    // optional - RxJava support for Room

    //    implementation "androidx.room:room-rxjava2:$room_version"

    //    // optional - Guava support for Room, including Optional and ListenableFuture

    //    implementation "androidx.room:room-guava:$room_version"

    //    // optional - Coroutines support for Room

    //    implementation "androidx.room:room-coroutines:$room_version"

    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    //    Android DB support Room - END

    //# Preference
    def preference_version = "1.1.0"
    implementation "androidx.preference:preference:$preference_version"

    //    # TEST

    //    testImplementation 'junit:junit:4.12'

    // Core library
    def test_version = "1.2.0"
    androidTestImplementation "androidx.test:core:$test_version"

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation "androidx.test:runner:$test_version"
    androidTestImplementation "androidx.test:rules:$test_version"

    // Optional -- Hamcrest library
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'

    // Optional -- UI testing with Espresso
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // Optional -- UI testing with UI Automator
    // Note: This framework requires Android 4.3 (API level 18) or higher.
//    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.ext:truth:1.2.0'
    androidTestImplementation 'com.google.truth:truth:0.42'

    // Espresso dependencies
    def test_expresso_version = "3.2.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:$test_expresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$test_expresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$test_expresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-accessibility:$test_expresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-web:$test_expresso_version"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$test_expresso_version"

    // The following Espresso dependency can be either "implementation"

    // or "androidTestImplementation", depending on whether you want the

    // dependency to appear on your APK's compile classpath or the test APK

    // classpath.
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$test_expresso_version"

    //    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {

    //        exclude group: 'com.android.support', module: 'support-annotations'

    //    })
}
